import{j as t}from"./jsx-runtime-Cf8x2fCZ.js";import{B as w}from"./index-Blak80_u.js";import{C as L}from"./index-B2OpD_bL.js";import{P}from"./index-DrJ36aH6.js";import"./Save-B3VvXevP.js";import{a as R,b as $}from"./Reset-X8BOYMzq.js";import{u as E}from"./i18n-provider-DLZYpdh4.js";import{c as q,f as I}from"./utils-B2yEwIwY.js";import{O as B}from"./index-C2I-PfoO.js";import{P as J,a as M,b as z}from"./popover-BqXImKWO.js";import{r as m}from"./index-B6o7_jwP.js";import{C as T}from"./index-Bw8Q85K6.js";import{m as k}from"./proxy-CqNJYjyK.js";import{F as H}from"./Search-DyMYdF6H.js";import{I as A}from"./input-BTRPgdqa.js";import{I as U}from"./InFilter-Buwt2jJ3.js";import{A as D}from"./index-Dy8WLFmQ.js";function G({filter:i,value:r,onSelect:n,onRemove:l}){const s=r??[];if(s.length===0)return null;const d=(p=>{if(Array.isArray(i.options)){const g=i.options.find(b=>b.value===p);return(g==null?void 0:g.label)??String(p)}else return String(p)})(s[0]),f=s.length-1,u=f>0?`${i.label}: ${d} +${f}`:`${i.label}: ${d}`;return t.jsx(k.div,{layout:!0,initial:{opacity:0,scale:.8},animate:{opacity:1,scale:1},exit:{opacity:0,scale:.8},transition:{type:"spring",duration:.2},children:t.jsx(T,{variant:"selected",label:u,onClose:l,onClick:n})})}function Q({filter:i,value:r,onSelect:n,onRemove:l}){const s=r??"",c=`${i.label}: ${s}`;return t.jsx(k.div,{layout:!0,initial:{opacity:0,scale:.8},animate:{opacity:1,scale:1},exit:{opacity:0,scale:.8},transition:{type:"spring",duration:.2},children:t.jsx(T,{variant:"selected",label:c,onClose:l,onClick:n})})}function C({filter:i,value:r,onSelect:n,onRemove:l}){switch(i.type){case"in":{if(!Array.isArray(r)&&r!==void 0)throw new Error(`Expected array value for "in" filter type, got ${typeof r}`);const s=r;return t.jsx(G,{filter:i,value:s,onSelect:n,onRemove:l})}case"search":{const s=String(r);return t.jsx(Q,{filter:i,value:s,onSelect:n,onRemove:l})}}}try{C.displayName="FilterButton",C.__docgenInfo={description:`Animated chip component that displays an active filter with its current value.
Uses discriminated unions to properly type the filter values based on filter type.

Note: This component uses minimal type assertions that are necessary due to
TypeScript limitations with generics across discriminated unions. These assertions
are type-safe because they are guarded by the filter.type check.`,displayName:"FilterButton",props:{filter:{defaultValue:null,description:"",name:"filter",required:!0,type:{name:"FilterDefinition<unknown>"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | unknown[] | undefined"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!0,type:{name:"() => void"}},onRemove:{defaultValue:null,description:"",name:"onRemove",required:!0,type:{name:"() => void"}}}}}catch{}function _({filter:i,value:r,onChange:n}){return t.jsx("div",{className:"space-y-4",children:t.jsx(A,{placeholder:`Search ${i.label.toLowerCase()}...`,value:r,onChange:l=>n(l.target.value)})})}try{_.displayName="SearchFilter",_.__docgenInfo={description:`A search filter component that provides free-text search functionality.
Renders an input field with appropriate placeholder text based on the filter label.`,displayName:"SearchFilter",props:{filter:{defaultValue:null,description:"The filter definition containing configuration like label",name:"filter",required:!0,type:{name:"SearchFilterDefinition"}},value:{defaultValue:null,description:"Current search value",name:"value",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the search value changes",name:"onChange",required:!0,type:{name:"(value: string) => void"}}}}}catch{}function N({selectedFilterKey:i,definition:r,tempFilters:n,onFilterChange:l}){const[s,c]=m.useState(""),d=m.useDeferredValue(s),[f,h]=m.useState([]),[u,p]=m.useState([]),[g,b]=m.useState(!1);if(m.useEffect(()=>{c(""),h([]),p([])},[i]),m.useEffect(()=>{!i||r[i].type!=="in"||u.length>0&&h(d?u.filter(o=>o.label.toLowerCase().includes(d.toLowerCase())):u)},[i,d,u,r]),m.useEffect(()=>{if(!i)return;const e=r[i];if(e.type!=="in")return;(async()=>{try{if(Array.isArray(e.options))p(e.options),h(e.options);else if(typeof e.options=="function"){b(!0);const a=await e.options();p(a),h(a)}}catch(a){console.error("Error loading options:",a),p([]),h([])}finally{b(!1)}})()},[i,r]),!i)return null;const y=r[i],v=n[i],j=y.type==="in"&&u.length>0&&!g,S=()=>{if(y.type==="in"){const e=f.map(x=>x.value),a=[...v??[]];e.forEach(x=>{a.includes(x)||a.push(x)}),l(i,a)}},F=e=>d&&u.length>0?{...e,options:f}:e;return t.jsx("div",{className:"relative flex w-full flex-col gap-1",children:t.jsx("div",{className:"relative flex h-full flex-col justify-between overflow-y-auto",children:t.jsxs("div",{className:"flex flex-col gap-2 p-2",children:[j&&t.jsxs("div",{className:"flex gap-3",children:[t.jsx(A,{type:"search",placeholder:"Search...",value:s,onChange:e=>c(e.target.value),className:"h-8 rounded",icon:H,clearable:!0}),t.jsx(w,{variant:"outline",label:"Select all",onClick:S,disabled:f.length===0})]}),y.type==="in"&&t.jsx(U,{filter:F(y),value:v??[],onChange:e=>l(i,e)}),y.type==="search"&&t.jsx(_,{filter:y,value:v??"",onChange:e=>l(i,e)})]})})})}try{N.displayName="FilterContent",N.__docgenInfo={description:`Renders the configuration content for the currently selected filter.

Features:
- Dynamically renders different filter interfaces based on filter type
- Supports "in" filters with multi-select capabilities
- Supports "search" filters with text input
- Provides search functionality for filtering options within "in" filters
- Handles both static and dynamically loaded options
- Supports "Select All" functionality for multi-select filters

This component renders the right panel in the filters popover interface
and adapts its UI based on the selected filter type.`,displayName:"FilterContent",props:{selectedFilterKey:{defaultValue:null,description:"The currently selected filter key, if any",name:"selectedFilterKey",required:!0,type:{name:"string | number | symbol | null"}},definition:{defaultValue:null,description:"The schema defining available filters and their configurations",name:"definition",required:!0,type:{name:"FiltersDefinition"}},tempFilters:{defaultValue:null,description:"Current temporary state of filters being configured",name:"tempFilters",required:!0,type:{name:"FiltersState<Definition>"}},onFilterChange:{defaultValue:null,description:"Callback fired when a filter value changes",name:"onFilterChange",required:!0,type:{name:"(key: keyof Definition, value: unknown) => void"}}}}}catch{}function V({definition:i,tempFilters:r,selectedFilterKey:n,onFilterSelect:l,onFilterClear:s}){return t.jsx("div",{className:"w-[224px] shrink-0 border border-solid border-transparent border-r-f1-border-secondary",children:t.jsx("div",{className:"flex h-full w-full flex-col gap-1 overflow-y-auto p-2",children:Object.entries(i).map(([c,d])=>{const f=r[c]&&(d.type==="in"?r[c].length>0:r[c]);return t.jsxs("button",{className:q("group relative flex w-full appearance-none items-center justify-between rounded px-2 py-1.5 font-medium transition-colors","hover:bg-f1-background-secondary",n===c&&"bg-f1-background-secondary",I()),onClick:()=>l(c),children:[t.jsxs("div",{className:"flex items-center justify-start gap-2.5 pr-6",children:[t.jsx("span",{className:"line-clamp-1 w-fit text-left",children:d.label}),t.jsx(D,{children:f&&t.jsx(k.div,{className:"h-2 w-2 shrink-0 rounded-full bg-f1-background-selected-bold",initial:{opacity:0,scale:.7},animate:{opacity:1,scale:1},exit:{opacity:0,scale:.7}})})]}),f&&t.jsx("div",{className:"absolute right-1 top-1 flex items-center gap-1 opacity-0 transition-opacity focus-within:opacity-100 group-hover:opacity-100 group-focus-visible:opacity-100",children:t.jsx(w,{label:"Reset",variant:"ghost",hideLabel:!0,size:"sm",icon:R,onClick:()=>s(c)})})]},c)})})})}try{V.displayName="FilterList",V.__docgenInfo={description:`Displays a vertical list of available filters with selection and clear functionality.

Features:
- Shows all available filters from the definition
- Indicates active filters with a visual indicator
- Allows selecting a filter to configure
- Provides a reset button for clearing individual filters
- Handles animation for status indicators

This component renders the left sidebar in the filters popover interface.`,displayName:"FilterList",props:{definition:{defaultValue:null,description:"The schema defining available filters and their configurations",name:"definition",required:!0,type:{name:"FiltersDefinition"}},tempFilters:{defaultValue:null,description:"Current temporary state of filters being configured",name:"tempFilters",required:!0,type:{name:"FiltersState<Definition>"}},selectedFilterKey:{defaultValue:null,description:"The currently selected filter key, if any",name:"selectedFilterKey",required:!0,type:{name:"string | number | symbol | null"}},onFilterSelect:{defaultValue:null,description:"Callback fired when a filter is selected from the list",name:"onFilterSelect",required:!0,type:{name:"(key: keyof Definition) => void"}},onFilterClear:{defaultValue:null,description:"Callback fired when a filter is cleared",name:"onFilterClear",required:!0,type:{name:"(key: keyof Definition) => void"}}}}}catch{}function O({schema:i,presets:r,filters:n,onChange:l}){const s=E(),[c,d]=m.useState(!1),[f,h]=m.useState(()=>Object.keys(i)[0]||null),[u,p]=m.useState(n),g=e=>{e&&p(n),d(e)},b=e=>{const o={...n};delete o[e],l(o)},y=e=>{p(o=>{const a={...o};return delete a[e],a})},v=(e,o)=>{p(a=>({...a,[e]:o}))},j=()=>{l(u),d(!1)},S=(e,o,a=!0)=>{const x=JSON.stringify(e.filter)===JSON.stringify(n);return t.jsx(P,{label:e.label,selected:x,onClick:()=>l(e.filter),"data-visible":a},o)},F=(e,o)=>{const a=JSON.stringify(e.filter)===JSON.stringify(n);return t.jsxs("button",{className:q("flex w-full cursor-pointer items-center justify-between rounded-sm p-2 text-left font-medium text-f1-foreground hover:bg-f1-background-secondary",a&&"bg-f1-background-selected hover:bg-f1-background-selected",I()),onClick:()=>l(e.filter),"data-visible":!0,children:[e.label,t.jsx(L,{value:Object.keys(e.filter).length,type:a?"selected":"default"})]},o)};return t.jsxs("div",{className:"flex w-full flex-1 flex-col gap-4",children:[t.jsxs("div",{className:"flex items-center gap-2",children:[t.jsxs(J,{open:c,onOpenChange:g,children:[t.jsx(M,{asChild:!0,children:t.jsx(w,{icon:$,variant:"outline",hideLabel:!0,label:s.filters.label})}),t.jsx(z,{className:"w-[544px] rounded-xl border border-solid border-f1-border-secondary p-0 shadow-md",align:"start",side:"bottom",children:t.jsxs("div",{className:"flex h-[min(448px,80vh)] flex-col",children:[t.jsxs("div",{className:"flex min-h-0 flex-1",children:[t.jsx(V,{definition:i,tempFilters:u,selectedFilterKey:f,onFilterSelect:h,onFilterClear:y}),f&&t.jsx(N,{selectedFilterKey:f,definition:i,tempFilters:u,onFilterChange:v})]}),t.jsx("div",{className:"flex items-center justify-end gap-2 border-solid border-transparent border-t-f1-border-secondary px-3 py-2",children:t.jsx(w,{onClick:j,label:s.filters.applyFilters})})]})})]}),r&&r.length>0&&t.jsx(B,{items:r,renderListItem:S,renderDropdownItem:F,className:"flex-1"})]}),Object.keys(n).length>0&&t.jsx("div",{className:"flex flex-wrap items-center gap-2",children:t.jsx(D,{presenceAffectsLayout:!0,initial:!1,children:Object.keys(n).map(e=>{const o=i[e];return n[e]?t.jsx(C,{filter:o,value:n[e],onSelect:()=>{h(e),d(!0)},onRemove:()=>b(e)},String(e)):null})})})]})}try{O.displayName="Filters",O.__docgenInfo={description:`A comprehensive filtering interface that manages multiple filter types.
Provides a popover interface for filter configuration and displays active filters as chips.

The component supports multiple filter types through a unified interface:
- "in" type filters: Multi-select filters with predefined options
- "search" type filters: Free-text search filters

Features:
- Search and multi-select filters with type safety
- Temporary filter state that's only applied when explicitly confirmed
- Animated filter chips for active filters
- Support for filter presets for quick selection of common filter combinations
- Responsive design for different viewport sizes

The component maintains a temporary state of filters that are only applied
when the user explicitly clicks the "Apply Filters" button, allowing for
a more controlled filtering experience.`,displayName:"Filters",props:{schema:{defaultValue:null,description:"The definition of available filters and their configurations",name:"schema",required:!0,type:{name:"FiltersDefinition"}},filters:{defaultValue:null,description:"Current state of applied filters",name:"filters",required:!0,type:{name:"FiltersState<Definition>"}},presets:{defaultValue:null,description:"Optional preset configurations that users can select",name:"presets",required:!1,type:{name:"Presets<Definition>"}},onChange:{defaultValue:null,description:"Callback fired when filters are changed",name:"onChange",required:!0,type:{name:"(value: FiltersState<Definition>) => void"}}}}}catch{}export{O as F};
