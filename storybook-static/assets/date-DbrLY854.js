import{t as o,c as w,g as x,a as L,e as N,m as y,b as T,d as O,f as S,h as M}from"./format-CPFj0COA.js";function z(e,a){const t=o(e),i=o(a),s=t.getTime()-i.getTime();return s<0?-1:s>0?1:s}function H(e){return w(e,Date.now())}function R(e){return a=>{const i=(e?Math[e]:Math.trunc)(a);return i===0?0:i}}function b(e,a,t){const i=L(),s=(t==null?void 0:t.locale)??i.locale??N,g=z(e,a);if(isNaN(g))throw new RangeError("Invalid time value");const c=Object.assign({},t,{addSuffix:t==null?void 0:t.addSuffix,comparison:g});let l,d;g>0?(l=o(a),d=o(e)):(l=o(e),d=o(a));const u=R((t==null?void 0:t.roundingMethod)??"round"),h=d.getTime()-l.getTime(),f=h/S,I=x(d)-x(l),m=(h-I)/S,D=t==null?void 0:t.unit;let n;if(D?n=D:f<1?n="second":f<60?n="minute":f<y?n="hour":m<T?n="day":m<O?n="month":n="year",n==="second"){const r=u(h/1e3);return s.formatDistance("xSeconds",r,c)}else if(n==="minute"){const r=u(f);return s.formatDistance("xMinutes",r,c)}else if(n==="hour"){const r=u(f/60);return s.formatDistance("xHours",r,c)}else if(n==="day"){const r=u(m/y);return s.formatDistance("xDays",r,c)}else if(n==="month"){const r=u(m/T);return r===12&&D!=="month"?s.formatDistance("xYears",1,c):s.formatDistance("xMonths",r,c)}else{const r=u(m/O);return s.formatDistance("xYears",r,c)}}function v(e,a){return b(e,H(e),a)}function Y(e){return M(e,"p")}function U(e){return M(e,"HH:mm")}function _(e){return M(e,"LLL")}function j(e){return e.getDate()}function E(e){return v(e,{addSuffix:!0})}export{_ as a,U as b,E as c,Y as f,j as g};
