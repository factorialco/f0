import{j as i}from"./jsx-runtime-Cf8x2fCZ.js";import{r as a}from"./index-B6o7_jwP.js";const u=async()=>{var t;if(navigator.userAgentData){const r=((t=(await navigator.userAgentData.getHighEntropyValues(["platform"])).platform)==null?void 0:t.toLowerCase())||"";switch(!0){case r.includes("mac"):return"mac";case r.includes("windows"):return"windows";case r.includes("linux"):return"linux";case navigator.userAgentData.mobile:return"mobile"}}const e=navigator.userAgent.toLowerCase();switch(!0){case/mac|iphone|ipod|ipad/.test(e):return"mac";case/win/.test(e):return"windows";case/linux/.test(e):return"linux";case/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e):return"mobile";default:return"unknown"}},s=a.createContext(null),o=({children:e,platform:t})=>{const[n,r]=a.useState(t??"unknown");return a.useEffect(()=>{t===void 0&&u().then(r)},[t]),i.jsx(s.Provider,{value:n,children:e})};function m(){const e=a.useContext(s);if(e===null)throw new Error("useUserPlatform must be used within an UserPlatformProvider");return e}try{o.displayName="UserPlatformProvider",o.__docgenInfo={description:"",displayName:"UserPlatformProvider",props:{platform:{defaultValue:null,description:"Force set the platform. Won't trigger platform auto-detection if set.",name:"platform",required:!1,type:{name:"enum",value:[{value:'"mobile"'},{value:'"mac"'},{value:'"windows"'},{value:'"linux"'},{value:'"unknown"'}]}}}}}catch{}export{o as U,m as u};
