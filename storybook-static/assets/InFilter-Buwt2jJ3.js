import{j as t}from"./jsx-runtime-Cf8x2fCZ.js";import{C as w}from"./index-Dx7Y6k44.js";import{S as N}from"./index-DrkntLAK.js";import{u as S}from"./i18n-provider-DLZYpdh4.js";import{c as f,f as p}from"./utils-B2yEwIwY.js";import{r as o}from"./index-B6o7_jwP.js";function m({filter:e,value:i,onChange:y}){const r=typeof e.options=="function",x=o.useMemo(()=>Array.isArray(e.options)?e.options:[],[e.options]),[g,c]=o.useState([]),[h,l]=o.useState(r),[v,a]=o.useState(null),u=S(),d=r?g:x;return o.useEffect(()=>{if(!r)return;(async()=>{try{if(typeof e.options=="function"){l(!0),a(null);const s=await e.options();c(s)}}catch(s){a(s instanceof Error?s:new Error("Failed to load options")),console.error("Error loading filter options:",s)}finally{l(!1)}})()},[e,e.options,r]),h?t.jsx("div",{className:"flex w-full items-center justify-center py-4",children:t.jsx(N,{size:"small"})}):v?t.jsxs("div",{className:"text-f1-foreground-destructive flex w-full flex-col items-center justify-center gap-2 py-4",children:[t.jsx("p",{className:"text-sm",children:u.collections.filters.failedToLoadOptions}),t.jsx("button",{className:f("text-f1-foreground-primary text-xs underline",p()),onClick:()=>{c([]),a(null),l(!0)},children:u.collections.filters.retry})]}):d.length===0?t.jsx("div",{className:"flex w-full items-center justify-center py-4 text-sm text-f1-foreground-secondary",children:"No options available"}):t.jsx("div",{className:"flex w-full flex-col gap-1",role:"group","aria-label":e.label,children:d.map(n=>{const s=i.includes(n.value),j=`option-${String(n.value)}`;return t.jsxs("div",{className:f("flex w-full cursor-pointer appearance-none items-center justify-between rounded p-2 font-medium transition-colors hover:bg-f1-background-secondary",p()),onClick:()=>{y(s?i.filter(b=>b!==n.value):[...i,n.value])},children:[t.jsx("span",{className:"line-clamp-1 w-fit text-left",children:n.label}),t.jsx(w,{id:j,title:n.label,checked:s,presentational:!0,hideLabel:!0})]},String(n.value))})})}try{m.displayName="InFilter",m.__docgenInfo={description:`A multi-select filter component that allows users to select multiple options from a predefined list.
Renders a list of checkboxes that can be toggled on/off to include/exclude values.

Features:
- Visual indication of selected state
- Toggle functionality (select/deselect)
- Maintains order of selection
- Supports both static and async options
- Shows loading state for async options`,displayName:"InFilter",props:{filter:{defaultValue:null,description:"The filter definition containing options and configuration",name:"filter",required:!0,type:{name:"InFilterDefinition<T>"}},value:{defaultValue:null,description:"Array of currently selected values",name:"value",required:!0,type:{name:"T[]"}},onChange:{defaultValue:null,description:"Callback fired when selected values change",name:"onChange",required:!0,type:{name:"(value: T[]) => void"}}}}}catch{}export{m as I};
