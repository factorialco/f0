name: "Unit Tests"
on:
  pull_request:
  push:
    branches:
      - "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Detect which projects have changed
  detect-changes:
    uses: ./.github/workflows/_check-workspaces-changes.yaml
  check-main-coverage:
    name: "Check main coverage artifact"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    outputs:
      has_coverage_main: ${{ steps.check.outputs.has_coverage_main }}
    steps:
      - name: Check if coverage-main artifact exists on main
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const {owner, repo} = context.repo;
            const artifactsResp = await github.rest.actions.listArtifactsForRepo({
              owner,
              repo,
              per_page: 100
            });
            const artifacts = artifactsResp.data.artifacts || [];
            const found = artifacts.find(a => a.name === 'coverage-main' && a.expired === false && a.workflow_run && a.workflow_run.head_branch === 'main');
            core.setOutput('has_coverage_main', found ? 'true' : 'false');
  test:
    needs: [detect-changes, check-main-coverage]
    name: "[‚öõÔ∏è REACT] Unit Tests"
    if: |
      needs.detect-changes.outputs.package_react == 'true' &&
      github.head_ref != 'release-please--branches--master' &&
      !contains(github.event.pull_request.labels.*.name, 'autorelease') &&
      !(github.event_name == 'pull_request' && needs.check-main-coverage.outputs.has_coverage_main == 'true' && matrix.branch == 'main')
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: main
            artifact: main
          - branch: ${{ github.head_ref }}
            artifact: pull-request
    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write
      # Required to download artifacts from other workflow runs
      actions: read

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
          ## Set repository to correctly checkout from forks
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
      - uses: ./.github/actions/setup-node-pnpm
        with:
          node-version: "22.x"
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Build core package
        run: pnpm --filter @factorialco/factorial-one-core build
      - name: Run type checking
        run: pnpm --filter @factorialco/factorial-one-react run tsc
      - name: Run tests
        run: pnpm --filter @factorialco/factorial-one-react run vitest:ci --coverage.enabled true
      - name: "Report Coverage"
        # Set if: always() to also generate the report if tests are failing
        # Only works if you set `reportOnFailure: true` in your vite config as specified above
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          working-directory: packages/react
      - name: "Upload Coverage"
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.artifact }}
          path: packages/react/coverage
      - name: "Download main coverage artifact"
        if: ${{ github.event_name == 'pull_request' && needs.check-main-coverage.outputs.has_coverage_main == 'true' && matrix.artifact == 'pull-request' }}
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: test.yaml
          branch: main
          name: coverage-main
          path: packages/react/coverage-main

  report-coverage:
    needs: detect-changes
    name: "[‚öõÔ∏è REACT] Report Coverage"
    if: |
      needs.detect-changes.outputs.package_react == 'true' &&
      github.head_ref != 'release-please--branches--master' &&
      !contains(github.event.pull_request.labels.*.name, 'autorelease')
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Download Coverage Artifacts"
        uses: actions/download-artifact@v4
        with:
          name: coverage-pull-request
          path: packages/react/coverage
      - uses: actions/download-artifact@v4
        with:
          name: coverage-main
          path: packages/react/coverage-main
      - name: "Report Coverage"
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          json-summary-compare-path: packages/react/coverage-main/coverage-summary.json

  # ------------------------------------------------------------------------------

  test-react-native:
    needs: detect-changes
    name: "[üì± REACT NATIVE] Unit Tests"
    if: |
      needs.detect-changes.outputs.package_react_native == 'true'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
      - uses: ./.github/actions/setup-node-pnpm
        with:
          node-version: "22.x"
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Build core package
        run: pnpm --filter @factorialco/factorial-one-core build
      - name: Run tests
        run: pnpm --filter @factorialco/factorial-one-react-native run test
