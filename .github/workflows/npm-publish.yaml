name: "Publish packages"

on:
  release:
    types: [released]
  # Release is not triggered when the release was created by another workflow using GITHUB_TOKEN https://github.com/orgs/community/discussions/25281#discussioncomment-3300251
  workflow_run:
    workflows: [Create release]
    types:
      - completed

  workflow_dispatch: # Allows manual triggering
    inputs:
      release_tag:
        description: "The release tag to checkout"
        required: true

jobs:
  publish-react:
    name: "[‚öõÔ∏è REACT] Publish to npm"
    # Prevents running on the release-please branch
    # For workflow_run trigger we need to check if the workflow_run was successful and if the new_version output was set to not run on it if no new version was released
    if: |
      contains(github.event.release.tag_name, 'react-v') &&
      github.head_ref != 'release-please--branches--master' && !contains(github.event.pull_request.labels.*.name, 'autorelease') && 
      github.event_name == 'workflow_dispatch' || github.event_name == 'release' || 
      (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.new_version)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.release_tag || github.sha }} # Checkout the tagged release
      - uses: ./.github/actions/publish-to-npmjs
        id: publish
        with:
          workspace: "@factorialco/factorial-one-react"
          registry_token: ${{ secrets.NPMJS_TOKEN }}
      - name: Notify Slack
        run: |
          if [ ${{ steps.publish.outputs.published }} == "true" ]; then
            curl -X POST -H "Content-Type: application/json" -d '{ "content": "‚öõÔ∏è A new version of @factorialco/factorial-one-react was released.\n
            \n\n ${{github.event.release.body}}\n\nhttps://www.npmjs.com/package/@factorialco/factorial-one-react?activeTab=versions"}' ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
      - name: Notify Slack Test
        run: |
          if [ ${{ steps.publish.outputs.published }} == "true" ]; then
            RELEASE_BODY=$(echo '${{github.event.release.body}}' | 
              # Convert heading markdown
              sed 's/^## /\*/' | 
              sed 's/^### /\*/' | 
              sed 's/$/*/' |
              # Convert GitHub links to Slack format
              sed -E 's/\[(.*)\]\((.*)\)/<\2|\1>/g')
            curl -X POST -H "Content-Type: application/json" -d '{
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*‚öõÔ∏è A new version of <https://www.npmjs.com/package/@factorialco/factorial-one-react?activeTab=versions|@factorialco/factorial-one-react> was released*"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "'"$RELEASE_BODY"'"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Version:*\n<${{github.event.release.url}}|${{github.event.release.name}}> "
                    }
                  ]
                }
              ]
          }' ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
          fi

  publish-react-native:
    name: "[üì± REACT NATIVE] Publish to npm"
    # Prevents running on the release-please branch
    # For workflow_run trigger we need to check if the workflow_run was successful and if the new_version output was set to not run on it if no new version was released
    if: |
      contains(github.event.release.tag_name, 'react-native-v') &&
      github.head_ref != 'release-please--branches--master' && !contains(github.event.pull_request.labels.*.name, 'autorelease') && 
      github.event_name == 'workflow_dispatch' || github.event_name == 'release' || 
      (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.new_version)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.release_tag || github.sha }} # Checkout the tagged release
      - uses: ./.github/actions/publish-to-npmjs
        id: publish
        with:
          workspace: "@factorialco/factorial-one-react-native"
          registry_token: ${{ secrets.NPMJS_TOKEN }}
      - name: Notify Slack
        run: |
          if [ ${{ steps.publish.outputs.published }} == "true" ]; then
            curl -X POST -H "Content-Type: application/json" -d '{ "content": "üì± A new version of @factorialco/factorial-one-react-native was released.\n
            \n\n ${{github.event.release.body}}\n\nhttps://www.npmjs.com/package/@factorialco/factorial-one-react-native?activeTab=versions"}' ${{ secrets.SLACK_WEBHOOK_URL }}
          fi

  publish-core:
    name: "[üéØ CORE] Publish to npm"
    # Prevents running on the release-please branch
    # For workflow_run trigger we need to check if the workflow_run was successful and if the new_version output was set to not run on it if no new version was released
    if: |
      contains(github.event.release.tag_name, 'core-v') &&
      github.head_ref != 'release-please--branches--master' && !contains(github.event.pull_request.labels.*.name, 'autorelease') && 
      github.event_name == 'workflow_dispatch' || github.event_name == 'release' || 
      (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.new_version)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.release_tag || github.sha }} # Checkout the tagged release
      - uses: ./.github/actions/publish-to-npmjs
        id: publish
        with:
          workspace: "@factorialco/factorial-one-core"
          registry_token: ${{ secrets.NPMJS_TOKEN }}
      - name: Notify Slack
        run: |
          if [ ${{ steps.publish.outputs.published }} == "true" ]; then
            curl -X POST -H "Content-Type: application/json" -d '{ "content": "üéØ A new version of @factorialco/factorial-one-core was released.\n
            \n\n ${{github.event.release.body}}\n\nhttps://www.npmjs.com/package/@factorialco/factorial-one-core?activeTab=versions"}' ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
