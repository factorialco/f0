{"version":3,"sources":["../../../src/lib/utils.ts","../../../src/components/Counter/index.tsx","../../../src/components/OnePreset/index.tsx"],"names":["twMerge","clsx","cva","jsx","View","Text","jsxs","Pressable"],"mappings":";;;;;;;;;AAGO,SAAS,MAAM,MAAA,EAAsB;AAC1C,EAAA,OAAOA,qBAAA,CAAQC,SAAA,CAAK,MAAM,CAAC,CAAA;AAC7B;ACDA,IAAM,2BAA2BC,OAAA,CAAI;AAAA,EACnC,IAAA,EAAM,2DAAA;AAAA,EACN,QAAA,EAAU;AAAA,IACR,IAAA,EAAM;AAAA,MACJ,EAAA,EAAI,aAAA;AAAA,MACJ,EAAA,EAAI;AAAA,KACN;AAAA,IACA,IAAA,EAAM;AAAA,MACJ,OAAA,EAAS,oDAAA;AAAA,MACT,QAAA,EAAU,2DAAA;AAAA,MACV,IAAA,EAAM;AAAA;AACR,GACF;AAAA,EACA,eAAA,EAAiB;AAAA,IACf,IAAA,EAAM,IAAA;AAAA,IACN,IAAA,EAAM;AAAA;AAEV,CAAC,CAAA;AAED,IAAM,sBAAsBA,OAAA,CAAI;AAAA,EAC9B,IAAA,EAAM,gEAAA;AAAA,EACN,QAAA,EAAU;AAAA,IACR,IAAA,EAAM;AAAA,MACJ,EAAA,EAAI,EAAA;AAAA,MACJ,EAAA,EAAI;AAAA,KACN;AAAA,IACA,IAAA,EAAM;AAAA,MACJ,OAAA,EAAS,oBAAA;AAAA,MACT,QAAA,EAAU,4BAAA;AAAA,MACV,IAAA,EAAM;AAAA;AACR,GACF;AAAA,EACA,eAAA,EAAiB;AAAA,IACf,IAAA,EAAM;AAAA;AAEV,CAAC,CAAA;AAOM,SAAS,QAAQ,EAAE,IAAA,EAAM,IAAA,EAAM,KAAA,EAAO,UAAS,EAAiB;AACrE,EAAA,MAAM,eAAe,QAAA,IAAY,KAAA,GAAQ,QAAA,GAAW,CAAA,CAAA,EAAI,QAAQ,CAAA,CAAA,GAAK,KAAA;AAErE,EAAA,uBACEC,cAAA,CAACC,gBAAA,EAAA,EAAK,SAAA,EAAU,kBAAA,EACd,QAAA,kBAAAD,cAAA,CAACC,gBAAA,EAAA,EAAK,SAAA,EAAW,EAAA,CAAG,wBAAA,CAAyB,EAAE,IAAA,EAAM,IAAA,EAAM,CAAC,CAAA,EAC1D,QAAA,kBAAAD,cAAA,CAACE,gBAAA,EAAA,EAAK,SAAA,EAAW,EAAA,CAAG,mBAAA,CAAoB,EAAE,IAAA,EAAM,IAAA,EAAM,CAAC,CAAA,EACpD,QAAA,EAAA,YAAA,EACH,CAAA,EACF,CAAA,EACF,CAAA;AAEJ;AC/CO,IAAM,YAAY,CAAC;AAAA,EACxB,KAAA;AAAA,EACA,MAAA;AAAA,EACA,OAAA;AAAA,EACA;AACF,CAAA,KAAmB;AACjB,EAAA,uBACEF,cAAAA,CAACC,gBAAAA,EAAA,EAAK,WAAU,kBAAA,EACd,QAAA,kBAAAE,eAAA;AAAA,IAACC,qBAAA;AAAA,IAAA;AAAA,MACC,OAAA,EAAS,OAAA;AAAA,MACT,SAAA,EAAW,EAAA;AAAA,QACT,sHAAA;AAAA,QACA,MAAA,KAAW,MAAA,IAAa,MAAA,KAAW,IAAA,IAAQ,QAAA;AAAA,QAC3C,QAAA,IACE;AAAA,OACJ;AAAA,MAEA,QAAA,EAAA;AAAA,wBAAAJ,cAAAA,CAACE,gBAAAA,EAAA,EAAK,SAAA,EAAU,wCAAwC,QAAA,EAAA,KAAA,EAAM,CAAA;AAAA,QAC7D,MAAA,KAAW,MAAA,IAAa,MAAA,KAAW,IAAA,oBAClCF,cAAAA,CAAC,OAAA,EAAA,EAAQ,KAAA,EAAO,MAAA,EAAQ,IAAA,EAAM,QAAA,GAAW,UAAA,GAAa,SAAA,EAAW;AAAA;AAAA;AAAA,GAErE,EACF,CAAA;AAEJ","file":"index.js","sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import { cva, type VariantProps } from \"cva\";\nimport { Text, View } from \"react-native\";\nimport { cn } from \"../../lib/utils\";\n\nconst counterContainerVariants = cva({\n  base: \"flex items-center justify-center rounded-xs grow-0 px-0.5\",\n  variants: {\n    size: {\n      md: \"min-w-5 h-5\",\n      sm: \"min-w-4 h-4\",\n    },\n    type: {\n      default: \"bg-f1-background-secondary border border-f1-border\",\n      selected: \"bg-f1-background-selected-bold outline-f1-border-selected\",\n      bold: \"bg-f1-background-accent-bold\",\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n    type: \"default\",\n  },\n});\n\nconst counterTextVariants = cva({\n  base: \"text-center text-sm font-medium tabular-nums whitespace-nowrap\",\n  variants: {\n    size: {\n      md: \"\",\n      sm: \"leading-none py-0.5\",\n    },\n    type: {\n      default: \"text-f1-foreground\",\n      selected: \"text-f1-foreground-inverse\",\n      bold: \"text-f1-foreground-inverse\",\n    },\n  },\n  defaultVariants: {\n    type: \"default\",\n  },\n});\n\ntype CounterProps = {\n  value: number;\n  maxValue?: number;\n} & VariantProps<typeof counterContainerVariants>;\n\nexport function Counter({ size, type, value, maxValue }: CounterProps) {\n  const displayValue = maxValue && value > maxValue ? `+${maxValue}` : value;\n\n  return (\n    <View className=\"flex items-start\">\n      <View className={cn(counterContainerVariants({ size, type }))}>\n        <Text className={cn(counterTextVariants({ type, size }))}>\n          {displayValue}\n        </Text>\n      </View>\n    </View>\n  );\n}\n","import { Text, Pressable, View } from \"react-native\";\nimport { Counter } from \"../Counter\";\nimport { cn } from \"../../lib/utils\";\n\nexport interface PresetProps {\n  label: string;\n  number?: number;\n  onClick?: () => void;\n  selected?: boolean;\n}\n\nexport const OnePreset = ({\n  label,\n  number,\n  onClick,\n  selected,\n}: PresetProps) => {\n  return (\n    <View className=\"flex items-start\">\n      <Pressable\n        onPress={onClick}\n        className={cn(\n          \"flex grow-0 flex-row items-center gap-2 rounded border border-f1-border px-2.5 py-1.5 font-medium text-f1-foreground\",\n          number !== undefined && number !== null && \"pr-1.5\",\n          selected &&\n            \"border-f1-border-selected bg-f1-background-selected-secondary text-f1-foreground-selected\",\n        )}\n      >\n        <Text className=\"whitespace-nowrap text-f1-foreground\">{label}</Text>\n        {number !== undefined && number !== null && (\n          <Counter value={number} type={selected ? \"selected\" : \"default\"} />\n        )}\n      </Pressable>\n    </View>\n  );\n};\n"]}