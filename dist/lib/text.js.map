{"version":3,"sources":["../../src/lib/text.ts"],"names":["useEffect"],"mappings":";;;;;AAQA,IAAM,kBAAA,GAAqB,CAAC,IAAA,EAAc,KAAA,KAAiB;AACzD,EAAA,IAAI,KAAA,CAAM,aAAA,IAAiB,IAAA,CAAK,MAAA,KAAW,CAAA,EAAG;AAC5C,IAAA,MAAM,MAAM,iDAAiD,CAAA;AAAA,EAC/D;AAEA,EAAA,IAAI,MAAM,SAAA,KAAc,MAAA,IAAa,IAAA,CAAK,MAAA,GAAS,MAAM,SAAA,EAAW;AAClE,IAAA,MAAM,KAAA;AAAA,MACJ,CAAA,CAAA,EAAI,IAAI,CAAA,2BAAA,EAA8B,KAAA,CAAM,SAAS,CAAA,WAAA;AAAA,KACvD;AAAA,EACF;AAEA,EAAA,IAAI,MAAM,SAAA,KAAc,MAAA,IAAa,IAAA,CAAK,MAAA,GAAS,MAAM,SAAA,EAAW;AAClE,IAAA,MAAM,MAAM,CAAA,CAAA,EAAI,IAAI,CAAA,uBAAA,EAA0B,KAAA,CAAM,SAAS,CAAA,WAAA,CAAa,CAAA;AAAA,EAC5E;AACF,CAAA;AAEO,IAAM,qBAAA,GAAwB,CAAC,IAAA,EAAe,KAAA,KAAkB;AACrE,EAAAA,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,IAAA,KAAS,UAAa,KAAA,EAAO;AAC/B,MAAA,kBAAA,CAAmB,MAAM,KAAK,CAAA;AAAA,IAChC;AAAA,EACF,CAAA,EAAG,CAAC,IAAA,EAAM,KAAK,CAAC,CAAA;AAClB","file":"text.js","sourcesContent":["import { useEffect } from \"react\";\n\ntype Rules = {\n  disallowEmpty?: boolean;\n  minLength?: number;\n  maxLength?: number;\n};\n\nconst textFormatEnforcer = (text: string, rules: Rules) => {\n  if (rules.disallowEmpty && text.length === 0) {\n    throw Error(\"You need to provide some text that is not empty\");\n  }\n\n  if (rules.maxLength !== undefined && text.length > rules.maxLength) {\n    throw Error(\n      `\"${text}\" should have no more than ${rules.maxLength} characters`,\n    );\n  }\n\n  if (rules.minLength !== undefined && text.length < rules.minLength) {\n    throw Error(`\"${text}\" should have at least ${rules.minLength} characters`);\n  }\n};\n\nexport const useTextFormatEnforcer = (text?: string, rules?: Rules) => {\n  useEffect(() => {\n    if (text !== undefined && rules) {\n      textFormatEnforcer(text, rules);\n    }\n  }, [text, rules]);\n};\n"]}